<!DOCTYPE html>
<html>
	<head>
		<title>New York Times Daily Crossword</title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<style type="text/css">
			body
			{
				-webkit-user-select:none;
				-moz-user-select:none;
				-ms-user-select:none;
				user-select:none;
			}
			
			*{user-select:none;cursor: default;}
			.vblack {background-color:#000000;visibility:visible;}
			.black {background-color:#000000;visibility:visible;}
			.num{height:6pt;font-family:arial;font-size:6pt;visibility:visible}
			.letter{height:100%;width:100%;font-family:helvetica;font-size:8pt;text-align:center;display:none;}
			.bigshade{background-color:lightgray;}
			.bigcircle{border-radius:50%;background-color:lightgray;}
			.subst{font-family:verdana;font-size:8pt;text-align:center;display:none;}
			.subst2{font-family:verdana;font-size:6pt;text-align:center;display:none;}
			.copy{font-family:Arial;font-weight:bold;font-size:7pt}

			.PuzTable {margin-bottom:0px;border-collapse:collapse;}
			.PuzTable td {vertical-align:top;height:14px;width:14px;border:1px solid black;padding:0px;}
			.PuzTitle, .CPHContent_Copyright{font-family:Arial;font-weight:normal;font-size:8pt;}

			.puzzle-diagramless
			{
				color:transparent;
				background-color:transparent;
			}

			.dlg-pzl-sel
			{
				display:flex;
				flex-direction:column;
				align-items:stretch;

				z-index:1000;
				width:325px;
				font-family:Arial;
				font-size:8pt;
				background-color:white;
				border:1px solid black;
				box-shadow: 5px 5px 5px gray;
				margin-bottom:10px;
				padding:4px;
			}
			.dlg-pzl-sel > * {margin:2px;}

			.date-opts
			{
				flex:1 1 auto;
				display:flex;
				align-items:center;
			}
			.date-label {flex:0 0 80px;}
			.date-sel{flex:1 1 1px;min-width:1px;margin-right:4px;}

			.proxy-opts
			{
				flex:1 1 auto;
				display:flex;
				align-items:center;
			}
			.proxy-label{flex:0 0 80px;}
			.proxy-sel{flex:1 1 1px;}

			.more-opts
			{
				flex:1 1 auto;
				display:flex;
				align-items:center;
			}
			.grid-size-label{flex:0 0 80px;}
			.grid-size{flex:0 0 40px;min-width:1px;text-align:center;}

			.yet-more-opts
			{
				flex:1 1 auto;
				display:flex;
				flex-wrap:wrap;
				justify-content:space-between;
				align-items:center;
			}
			.yet-more-opts > div{display:flex;align-items:center;}
			.yet-more-opts > div > input[type='checkbox']{margin-left:10px;}
			
			.puzzle-page-container
			{
				flex:1 1 auto;
				display:flex;
				flex-direction:column;
				flex-wrap:nowrap;
				align-items:start;
			}
			.puzzle-page-container-landscape
			{
				flex-direction:row;
			}
			.puzzle-container
			{
				flex:0 0 auto;
			}
			.puzzle-page-container-landscape > .puzzle-container
			{
				margin-right:25px;
			}
			.puzzle-clues
			{
				flex:1 1 auto;
				display:flex;
				font-family:Arial;
				font-size:8pt;
				padding:3px;
			}
			.puzzle-clues-across, .puzzle-clues-down
			{
				flex:1 1 auto;
				max-width:3in;
				overflow:hidden;
			}
			.puzzle-clues-across
			{
				margin-right:.25in;
			}
			.puzzle-across-header, .puzzle-down-header
			{
				font-size:9pt;
				font-weight:bold;
				margin-bottom:3px;
			}

			.cell-selected
			{
				background-color:#e6ffd1;
			}
			.cell-selected:focus
			{
				background-color:#a9bd99;
			}

			@media print
			{
				.dlg-pzl-sel
				{
					display: none;
				}
				.cell-selected
				{
					background-color:inherit;
				}
			}
			@media print and (orientation: landscape)
			{
				.puzzle-page-container
				{
					flex-direction:row;
				}
				.puzzle-container
				{
					margin-right: 25px;
				}
			}
		</style>
		<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css">
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.js"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.js"></script>
		<script type="text/javascript">
			sformat = function (sPattern, args) {
				var _args = arguments;
				return sPattern && sPattern.replace(/\%(\d+)/g, function (s, n) {
					return _args[n];
				});
			};

			var curAjax = null;
			$(function()
			{
				function LoadPuzzle(date)
				{
					var date = date || $(".date-sel").datepicker("getDate");
					var strParm = sformat("http://www.xwordinfo.com/Crossword?date=%1", $.datepicker.formatDate("mm/dd/yy", date));
					//var strParm = sformat("http://www.xwordinfo.com/Crossword?date=%1", "07/03/16");
					var strUri = $("#proxyServer").prop("value");
					switch(strUri)
					{
						case "proxy.jsp": strUri = "./proxy.jsp?" + strParm;break;
						case "test.server.js": strUri = "/proxy/load?uri=" + strParm;break;
						case "none": strUri = strParm;
					}

					//Kill any current ajax request.
					(curAjax && curAjax.abort());
					curAjax = $.ajax(
					{
						"url": strUri,
						"dataType":"html",
						"beforeSend":function(xhr, settings)
						{
							$(".puzzle-container").html("<img src='./loader.gif'>");
							$(".puzzle-clues").css("display", "none");
						},
						"success":function(puzzlePage, status, xhr)
						{
							puzzlePage = puzzlePage.replace(/ : /g, "");

							var $puzzPage = $(puzzlePage);
							var $puzzTab = $puzzPage.find("#PuzTable");
							var $puzzTitle = $puzzPage.find("#CPHContent_TitleLabel").addClass("PuzTitle");
							var $puzzCRight = $puzzPage.find("#CPHContent_Copyright").addClass("CPHContent_Copyright");
							var $puzzSelection = $(".puzzle-selection");
							var $puzzContainer = $(".puzzle-container").empty().append($puzzTitle, $puzzTab, $puzzCRight);
							var $puzzPageContainer = $(".puzzle-page-container");
							var $puzzAcrossHeader = $(".puzzle-across-header").detach();
							var $puzzDownHeader = $(".puzzle-down-header").detach();
							var $cluesAcross = $(".puzzle-clues-across").empty().append($puzzAcrossHeader, $puzzPage.find("#CPHContent_AcrossClues"));
							var $cluesDown = $(".puzzle-clues-down").empty().append($puzzDownHeader, $puzzPage.find("#CPHContent_DownClues"));

							$(".show-answers").prop("checked", false);
							$(".make-diagramless").prop("checked", false);
							$(".grid-size").trigger("change");
							$(".puzzle-clues").css("display", "").find("a").remove(); //show puzzle, and remove answers now that it's all loaded.

							if(!$puzzTab.length)
							{
								var str = "DID YOU FORGET TO TURN OFF PK VALIDATION?!...<p><p><h1>SERVER RESPONSE:</h1><p>" + xhr.responseText;
								$(document.documentElement).html(str);
							}

							var pCont = $(".puzzle-page-container");
							pCont.data("xWord", new XWord(pCont));
						},
						"error":function(xhr, strError, strMessage)
						{
							$(".puzzle-container").html(xhr.responseText || strMessage || "Unknown AJAX error retrieving puzzle.");
						}
					});
				}

				var date = new Date();
				$(".date-sel").datepicker().datepicker("setDate", date).on("change", function(e)
				{
					var date = $(e.target).datepicker("getDate");
					LoadPuzzle(date);
				});
				LoadPuzzle(date);

				$("#proxyServer").on("change", function(e)
				{
					LoadPuzzle(date);
				});

				$(".make-diagramless").on("change", function(e)
				{
					$("td.black, td.bigshade, .num").toggleClass("puzzle-diagramless");
					$(".puzzle-page-container").data("xWord").selectClue(XWord.DEFINES.INVALID_CLUE_NUM, "across");
				});
				
				$(".show-answers").on("change", function(e)
				{
					$(".letter, .subst, .subst1").css("display", (this.checked) ? "inherit" : "none");
				});

				$(".date-print").on("click", function(e)
				{
					if(e.ctrlKey)
						LoadPuzzle();
					else
						window.print();
				});

				$("#btnLandscape").on("click", function(e)
				{
					var pageContainer = $(".puzzle-page-container");
					$(e.target).prop("checked") ? pageContainer.addClass("puzzle-page-container-landscape") : pageContainer.removeClass("puzzle-page-container-landscape");
				});

				var puzzGridSize = $(".grid-size").prop("value", "20px").on("change", function(e)
				{
					var gridSize = parseInt($(".grid-size").prop("value"), 10) + "px";
					$(".PuzTable td").css({"width": gridSize, "height": gridSize});
					$(this).prop("value", gridSize);
				});
			});

			/******************************************************************
				Represents the interactive XWord Puzzle
			******************************************************************/
			function XWord(el)
			{
				var el = this._element = $(el);
				var table = this._table = $(el.find("table"));
				
				//map across clues
				table.find("tr").each(function(idx, el)
				{
					var curClue = XWord.DEFINES.NULL_CLUE_NUM;
					$(el).find("td").each(function(row, col, el)
					{
						var td = $(el);
						if(!td.hasClass("black"))
						{
							var clueNum = td.find(".num").text();
							curClue = (curClue == XWord.DEFINES.NULL_CLUE_NUM) ? clueNum : curClue;
						}
						else
							curClue = XWord.DEFINES.NULL_CLUE_NUM;
						td.attr({"data-cy":row, "data-cx":col, "data-across":curClue}).on("click dblclick contextmenu", this._onCellClick.bind(this));
					}.bind(this, idx));
				}.bind(this));

				//map down clues
				table.find("tr:first td").each(function(idx, el)
				{
					var curClue = XWord.DEFINES.NULL_CLUE_NUM;
					this._table.find(sformat("td[data-cx=%1]", idx)).each(function(idx, el)
					{
						var td = $(el);
						if(!td.hasClass("black"))
						{
							var clueNum = td.find(".num").text();
							curClue = (curClue == XWord.DEFINES.NULL_CLUE_NUM) ? clueNum : curClue;
						}
						else
							curClue = XWord.DEFINES.NULL_CLUE_NUM;
						td.attr("data-down", curClue);
					}.bind(this));
				}.bind(this));
			
				this.selectClue(1, XWord.DEFINES.DIR_ACROSS);
			};
			var _p = XWord.prototype = new Object();
			XWord.DEFINES = 
			{
				DIR_ACROSS:"across",
				DIR_DOWN:"down",
				NULL_CLUE_NUM:-1,
				INVALID_CLUE_NUM:Infinity
			};

			_p._curClue = {"num":XWord.DEFINES.DIR_ACROSS, "dir":1};

			_p._onCellClick = function(e)
			{
				var data = $(e.currentTarget).data();
				var dir = this._curClue.dir;
				if(e.type == "dblclick" || e.type == "contextmenu")
					dir = (this._curClue.dir == XWord.DEFINES.DIR_ACROSS) ?  XWord.DEFINES.DIR_DOWN :  XWord.DEFINES.DIR_ACROSS;
				this.selectClue(data[dir], dir);
				e.preventDefault();
			};

			_p.selectClue = function(clueNumber, dir)
			{
				this._table.find(sformat("[data-%1=%2]", this._curClue.dir, this._curClue.num)).removeClass("cell-selected").attr("tabindex", null);
				this._table.find(sformat("[data-%1=%2]", dir, clueNumber)).addClass("cell-selected").attr("tabindex", "1");
				this._curClue = {"num":clueNumber, "dir":dir};
			};
		</script>
	</head>
	<body>
		<div class="dlg-pzl-sel">
			<div class="date-opts">
				<label class="date-label" for="puzzDate">Puzzle Date:</label>
				<input class="date-sel" type="text" readonly="">
				<button class="date-print">Print...</button>
			</div>
			<div class="proxy-opts">
				<label class="proxy-label" for="proxyServer">Proxy Server:</label>
				<select id="proxyServer" class="proxy-sel">
					<option value="proxy.jsp">Apache (proxy.jsp:8080)</option>
					<option value="test.server.js" selected>Node.js (proxy.server.js:8000)</option>
					<option value="none">None (Prolly won't work!)</option>
				</select>
			</div>
			<div class="more-opts">
				<label class="grid-size-label" for="gridSize" data-role-flex="item">Grid Size:</label>
				<input id="gridSize" class="grid-size" type="text">

				<div class="yet-more-opts">
					<div>
						<input id="showAnswers" class="show-answers" type="checkbox"/>
						<label class="show-answers-label" for="showAnswers">Show Anwsers</label>
					</div>
					<div>
						<input id="makeDiagramless" class="make-diagramless" type="checkbox"/>
						<label for="makeDiagramless" class="make-diagramless-label">Diagramless</label>
					</div>
					<div>
						<input id="btnLandscape" class="layout-landscape" type="checkbox"/>
						<label for="btnLandscape" class="layout-landscape-label">Puzzle Layout Landscape</label>
					</div>
				</div>
			</div>
		</div>

		<div class="puzzle-page-container">
			<div class="puzzle-container">
			</div>
			<div class="puzzle-clues">
				<div class="puzzle-clues-across">
					<div class="puzzle-across-header">Across</div>
				</div>
				<div class="puzzle-clues-down">
					<div class="puzzle-down-header">Down</div>
				</div>
			</div>
		</div>
	</body>
</html>

